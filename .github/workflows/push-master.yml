name: Publish Dev

on:
  push:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.8' ]
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Set up Python 🐍
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies 🧰
      run: |
        python -m pip install --upgrade pip
        pip install pep517
        pip install -e .[tests]

    - name: Lint Synatx with pylnit 🧪🖋
      run: python -m pylint --rcfile=setup.cfg tssc

    - name: Lint Synatx with flake8 🧪🖋
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 tssc/ --count --select=E9,F63,F7,F82 --show-source --statistics
        
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 tssc/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Lint Security with bandit 🔏🧪
      run: |
        bandit .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.8' ]
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Set up Python 🐍
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies 🧰
      run: |
        python -m pip install --upgrade pip
        pip install pep517
        pip install -e .[tests]

    - name: Test & Coverage 🧪
      run: |
        python -m pytest --cov=tssc --cov-report=xml tests/

    - name: Upload Coverage Report 🔺📊
      uses: codecov/codecov-action@v1
      with:
        flags: pytests
        name: Python ${{ matrix.python-version }}
        env_vars: PYTHON
        fail_ci_if_error: true

  build:
    needs:
    - lint
    - test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Python 🐍
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'

    - name: Install dependencies 🧰
      run: |
        python -m pip install --upgrade pip
        pip install pep517

    - name: Build 🛠
      run: |
        python -m pep517.build \
            --binary \
            --source . \
            --out-dir dist/

    - name: Upload Distribution Artifacts 🔺
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

  publish:
    needs:
    - build
    runs-on: ubuntu-latest
    steps:
    - name: Download Distribution 🔻
      if: github.event_name == 'push'
      uses: actions/download-artifact@v1
      with:
        name: dist
    
    - name: Publish Distribution to Test PyPI 📦
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
