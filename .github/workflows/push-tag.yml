name: Publish Release

on:
  push:
    tags: '*'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.8' ]
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Set up Python 🐍
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Lint Syntax 🧪🖋
      run: tox -e lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.8' ]
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Set up Python 🐍
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Test & Coverage 🧪
      run: tox -e test

    - name: Upload Coverage Report 🔺📊
      uses: codecov/codecov-action@v1
      with:
        flags: pytests
        name: Python ${{ matrix.python-version }}
        env_vars: PYTHON
        fail_ci_if_error: true

  build:
    needs:
    - lint
    - test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Python 🐍
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'

    - name: Build 🛠
      run: tox -e build

    - name: Upload Distribution Artifacts 🔺
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

  publish:
    needs:
    - build
    runs-on: ubuntu-latest
    steps:
    - name: Download Distribution 🔻
      if: github.event_name == 'push'
      uses: actions/download-artifact@v1
      with:
        name: dist

    - name: Publish Distribution to PyPI 📦
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
